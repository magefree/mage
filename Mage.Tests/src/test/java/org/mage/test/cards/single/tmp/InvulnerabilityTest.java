package org.mage.test.cards.single.tmp;

import mage.constants.PhaseStep;
import mage.constants.Zone;
import org.junit.Test;
import org.mage.test.serverside.base.CardTestPlayerBase;

/**
 * @author Susucr
 */
public class InvulnerabilityTest extends CardTestPlayerBase {

    /**
     * {@link mage.cards.i.Invulnerability Invulnerability} {1}{W}
     * Instant
     * Buyback {3} (You may pay an additional {3} as you cast this spell. If you do, put this card into your hand as it resolves.)
     * The next time a source of your choice would deal damage to you this turn, prevent that damage.
     */
    private static final String invulnerability = "Invulnerability";

    @Test
    public void test_EmblemDamage_Prevent() {
        addCard(Zone.HAND, playerA, invulnerability, 1);
        addCard(Zone.BATTLEFIELD, playerB, "Chandra, Awakened Inferno", 1); // +2: Each opponent gets an emblem with “At the beginning of your upkeep, this emblem deals 1 damage to you.”
        addCard(Zone.BATTLEFIELD, playerA, "Plains", 2);

        activateAbility(2, PhaseStep.PRECOMBAT_MAIN, playerB, "+2");

        checkEmblemCount("Chandra Emblem has been created", 2, PhaseStep.POSTCOMBAT_MAIN, playerA, "Emblem Chandra", 1);

        // turn 3: prevent
        castSpell(3, PhaseStep.UPKEEP, playerA, invulnerability);
        setChoice(playerA, false); // don't pay for Buyback
        setChoice(playerA, "Emblem Chandra"); // choice for source
        checkLife("prevention turn 3", 3, PhaseStep.POSTCOMBAT_MAIN, playerA, 20);

        // turn 5: no prevent to check effect ending

        setStrictChooseMode(true);
        setStopAt(5, PhaseStep.POSTCOMBAT_MAIN);
        execute();

        assertLife(playerA, 20 - 1);
    }
}
