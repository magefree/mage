package mage.client.dialog;

import org.mage.card.arcane.ManaSymbols;

import javax.swing.*;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 *
 * @author weirddan455
 */
public class PickMultiNumberDialog extends MageDialog {

    private List<JTextPane> textList = null;
    private List<JSpinner> spinnerList = null;

    /**
     * Creates new form PickMultiNumberDialog
     */
    public PickMultiNumberDialog() {
        initComponents();
        this.setModal(true);
    }

    public void showDialog(List<String> messages, int min, int max, Map<String, Serializable> options) {
        if (textList != null) {
            for (JTextPane textPane : textList) {
                this.remove(textPane);
            }
        }
        if (spinnerList != null) {
            for (JSpinner spinner : spinnerList) {
                this.remove(spinner);
            }
        }
        int size = messages.size();
        textList = new ArrayList<>(size);
        spinnerList = new ArrayList<>(size);
        for (int i = 0; i < size; i++) {
            String text;
            JTextPane textPane = new JTextPane();
            textPane.setContentType("text/html");
            switch (messages.get(i)) {
                case "W":
                case "U":
                case "B":
                case "R":
                case "G":
                    String manaString = '{' + messages.get(i) + '}';
                    text = ManaSymbols.replaceSymbolsWithHTML(manaString, ManaSymbols.Type.DIALOG);
                    break;
                default:
                    text = messages.get(i);
            }
            textPane.setText(text);
            textPane.setEditable(false);
            textPane.setLocation(10, 40 + (i * 30));
            textPane.setSize(100, 26);
            this.add(textPane);
            textList.add(textPane);

            JSpinner spinner = new JSpinner();
            spinner.setModel(new SpinnerNumberModel(min, min, max, 1));
            spinner.setLocation(200, 40 + (i * 30));
            spinner.setSize(100, 26);
            spinner.addChangeListener(e -> {
                int totalChosenAmount = 0;
                for (JSpinner jSpinner : spinnerList) {
                    totalChosenAmount += ((Number) jSpinner.getValue()).intValue();
                }
                counterText.setText(totalChosenAmount + " out of " + max);
                chooseButton.setEnabled(totalChosenAmount == max);
            });
            this.add(spinner);
            spinnerList.add(spinner);
        }
        int totalChosenAmount = min * size;
        this.counterText.setText(totalChosenAmount + " out of " + max);
        this.chooseButton.setEnabled(totalChosenAmount == max);
        this.setTitle((String) options.get("title"));
        this.pack();
        this.makeWindowCentered();
        this.setVisible(true);
    }

    public String getMultiAmount() {
        StringBuilder sb = new StringBuilder();
        for (JSpinner spinner : spinnerList) {
            sb.append(((Number) spinner.getValue()).intValue());
            sb.append(' ');
        }
        return sb.toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseButton = new javax.swing.JButton();
        counterText = new javax.swing.JTextField();

        chooseButton.setText("Choose");
        chooseButton.setEnabled(false);
        chooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseButtonActionPerformed(evt);
            }
        });

        counterText.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chooseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(counterText))
                .addGap(128, 128, 128))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(counterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 514, Short.MAX_VALUE)
                .addComponent(chooseButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseButtonActionPerformed
        this.hideDialog();
    }//GEN-LAST:event_chooseButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseButton;
    private javax.swing.JTextField counterText;
    // End of variables declaration//GEN-END:variables
}
